#!/usr/bin/env bash
#
# Use https://git.io/vPRR1 to download the latest version of it
# To execute: sh -c "$(wget -O - https://git.io/vPRR1)"
#

exeAsUser() {
  sudo -H -u $1 ${@:2}
}

silentpacman() {
  echo 'j' | sudo pacman $@
}

# Use colors, but only if connected to a terminal, and that terminal
# supports them.
if which tput >/dev/null 2>&1; then
    ncolors=$(tput colors)
fi
if [ -t 1 ] && [ -n "$ncolors" ] && [ "$ncolors" -ge 8 ]; then
  RED="$(tput setaf 1)"
  GREEN="$(tput setaf 2)"
  YELLOW="$(tput setaf 3)"
  BLUE="$(tput setaf 6)"
  BOLD="$(tput bold)"
  NORMAL="$(tput sgr0)"
else
  RED=""
  GREEN=""
  YELLOW=""
  BLUE=""
  BOLD=""
  NORMAL=""
fi

# Only enable exit-on-error after the non-critical colorization stuff,
# which may fail on systems lacking tput or terminfo
set -e

echo "This will install some tools on your system:"
echo "* yaourt"
echo "* System tools"
echo "* Desktop Environment"
echo "* Development Environment"

read -p "Are you sure you want that? [yn]" -r
echo    # move to a new line
if [[ ! $REPLY =~ ^[Yy]$ ]]
then
  exit 1
fi

printf "${RED}It is needed to get root rights for the following process!${NORMAL}\n"

echo #
read -p "Is a proxy setup needed?[yn] " -r
echo    # move to a new line
if [[ $REPLY =~ ^[Yy]$ ]]
then
  echo #
  read -p "Enter the address of the proxy:" -r
  echo    # move to a new line
  export http_proxy=$REPLY
  export https_proxy=$REPLY
fi

if [ -n "$http_proxy" ]; then
  #make a proxy available for sudo
  echo "Defaults env_keep += \"http_proxy\"" >> /etc/sudoers
  echo "Defaults env_keep += \"https_proxy\"" >> /etc/sudoers
fi

printf "${BLUE}Setup network...${NORMAL}\n"

netInterface=$(ls /sys/class/net | grep -m 1 en*)
# dhcpcd $netInterface
cp /etc/netctl/examples/ethernet-dhcp /etc/netctl/wired-dhcp
sed -i "/^Interface/s/eth0/$netInterface/" /etc/netctl/wired-dhcp
netctl enable wired-dhcp

silentpacman -S ifplugd
systemctl enable netctl-ifplugd@${netInterface}.service

printf "${BLUE}Setup basic programs...${NORMAL}\n"
silentpacman -S wget curl

printf "${BLUE}Setup working user...${NORMAL}\n"
read -p "Username of new user:[archi] " -r
echo    # move to a new line
userName="archi"
if [ ! -z $REPLY ];
then
  userName=$REPLY
fi

read -s -p "Password for new user:[love] " -r
echo    # move to a new line
userPass="love"
if [ ! -z $REPLY ];
then
  userPass=$REPLY
fi

sudo useradd -m -G wheel -s /bin/zsh $userName
sed -e 's/\s*\([\+0-9a-zA-Z]*\).*/\1/' << EOF | passwd $username
  $userPass # password
  $userPass # second time
EOF
userPass=""

currentUser=$(exeAsUser $userName whoami)
printf "Current non-root user: ${YELLOW}$currentUser${NORMAL}\n"

sudo passwd -l root

printf "${BLUE}Install yaourt...${NORMAL}\n"
exeAsUser $userName wget -O yaourt https://gist.githubusercontent.com/mgattozzi/66a90ae095f47786eb11/raw/e8179e16471cf323e7949210bfb60af36fab980a/yaourt.sh
exeAsUser $userName ./yaourt

exeAsUser $userName yaourt -Syy

cd ~

printf "${BLUE}Install oh-my-zsh with plugins...${NORMAL}\n"
silentpacman -S zsh
sudo -H -u $userName sh -c "sh -c \"$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)\""
sed -i "/^ZSH_THEME/s/\".*\"/\"gentoo\"/" ~/.zshrc
sed -i '/^plugins/s/(.*)/(git sudo adb gradle archlinux history)/' ~/.zshrc
mkdir ~/bin
echo "export PATH=$HOME/bin:$PATH%" > ~/.zshenv

if [ -n "$http_proxy" ]; then
  echo "export http_proxy=$http_proxy" >> /etc/zsh/zshenv
  echo "export https_proxy=$https_proxy" >> /etc/zsh/zshenv
fi

echo "alias sudo='sudo '" >> /etc/zsh/zshenv

printf "${BLUE}Install Reflector...${NORMAL}\n"
#Reflector for mirrorlist refreshing
sudo mv /etc/pacman.d/mirrorlist /etc/pacman.d/mirrorlist.bak
sudo yaourt -S reflector-timer-weekly

sudo sed -i '/--country/d' /etc/reflector.conf
sudo echo "--country Germany" >> /etc/reflector.conf

sudo systemctl enable reflector.timer
sudo systemctl start reflector.service

printf "${BLUE}Install nano...${NORMAL}\n"
silentpacman -S nano
echo "export EDITOR=nano" >> /etc/zsh/zshenv

printf "${BLUE}Configure NTP...${NORMAL}\n"
silentpacman -S ntp

sudo sed -i.bak '/server/d' /etc/ntp.conf
sudo echo "server 0.de.pool.ntp.org" >> /etc/ntp.conf
sudo echo "server 1.de.pool.ntp.org" >> /etc/ntp.conf
sudo echo "server 2.de.pool.ntp.org" >> /etc/ntp.conf
sudo echo "server 3.de.pool.ntp.org" >> /etc/ntp.conf

#prevent the machine from being a time server
sudo sed -i.bak '/restrict/d' /etc/ntp.conf
sudo echo "restrict default nomodify nopeer" >> /etc/ntp.conf
sudo echo "restrict 127.0.0.1" >> /etc/ntp.conf

sudo systemctl enable ntpd.service

echo #
read -p "Is the system running in a virtualbox environment? [yn]" -r
echo    # move to a new line
if [[ $REPLY =~ ^[Yy]$ ]]
then
  silentpacman -S virtualbox-guest-modules-arch virtualbox-guest-utils
  sudo systemctl enable vboxservice.service
else
  printf "${YELLOW}Skipping virtualbox additions${NORMAL}\n"
fi

printf "${BLUE}Install lightdm and gtk-greeter...${NORMAL}\n"
silentpacman -S lightdm lightdm-gtk-greeter
sudo systemctl enable lightdm.service

desktopEnv=""
until [ -n "$desktopEnv" ]; do
echo "Which desktop environment you want to have installed ?"
echo "1] Cinnamon"
echo "2] Xfce 4"
read -n 1 desktopSelection
echo #new line
case $desktopSelection in
    1 )
      printf "${BLUE}Install Cinnamon...${NORMAL}\n"
      silentpacman -S cinnamon
      desktopEnv="cinnamon"
      ;;
    2 )
      printf "${BLUE}Install Xfce...${NORMAL}\n"
      silentpacman -S xfce4
      desktopEnv="xfce"
      ;;
esac
done

printf "${BLUE}Install Material Look...${NORMAL}\n"
sudo yaourt -S paper-icon-theme adapta-gtk-theme ttf-roboto

case "$desktopEnv" in
  "cinnamon" )
    gsettings set org.cinnamon.desktop.interface icon-theme 'Paper'
    gsettings set org.cinnamon.desktop.interface cursor-theme "Adapta-Nokto"
    gsettings set org.cinnamon.desktop.interface gtk-theme "Adapta-Nokto"
    gsettings set org.cinnamon.desktop.wm.preferences theme "Adapta-Nokto"
    gsettings set org.cinnamon.theme name "Adapta-Nokto"
  "xfce" )
    xfconf-query -c xsettings -p /Net/ThemeName -s "Adapta-Nokto"
    xfconf-query -c xsettings -p /Net/IconThemeName -s "Paper"
esac

printf "${BLUE}Install gedit...${NORMAL}\n"
silentpacman -S gedit

printf "${BLUE}Install google-chrome...${NORMAL}\n"
sudo yaourt -S google-chrome

printf "${BLUE}Install atom...${NORMAL}\n"
silentpacman -S atom

printf "${BLUE}Install JDK 8...${NORMAL}\n"
silentpacman -S jdk8-openjdk

printf "${BLUE}Install IDEA Community Edition...${NORMAL}\n"
silentpacman -S intellij-idea-community-edition

printf "${BLUE}Install Android-SDK...${NORMAL}\n"
sudo yaourt -S android-sdk
sudo groupadd androidsdk
sudo gpasswd -a $currentUser androidsdk
sudo chown -R :sdkusers /opt/android-sdk/
sudo chmod -R g+w /opt/android-sdk/
export ANDROID_HOME=/opt/android-sdk
echo "export ANDROID_HOME=/opt/android-sdk" >> ~/.zshenv
$ANDROID_HOME/tools/android update sdk --no-ui

printf "${BLUE}Install ADB...${NORMAL}\n"
silentpacman -S android-tools
sudo gpasswd -a $currentUser adbusers

printf "${BLUE}Install Android Studio...${NORMAL}\n"
sudo yaourt -S android-studio

#!/usr/bin/env bash
#
# Use https://git.io/vPRR1 to download the latest version of it
# To execute: sh -c "$(wget -O - https://git.io/vPRR1)"
#

exeAsUser() {
  sudo -H -u $1 ${@:2}
}

silentpacman() {
  pacman --noconfirm $@
}

silentyaourt() {
  exeAsUser $userName yaourt --noconfirm $@
}

# Use colors, but only if connected to a terminal, and that terminal
# supports them.
if which tput >/dev/null 2>&1; then
    ncolors=$(tput colors)
fi
if [ -t 1 ] && [ -n "$ncolors" ] && [ "$ncolors" -ge 8 ]; then
  RED="$(tput setaf 1)"
  GREEN="$(tput setaf 2)"
  YELLOW="$(tput setaf 3)"
  BLUE="$(tput setaf 6)"
  BOLD="$(tput bold)"
  NORMAL="$(tput sgr0)"
else
  RED=""
  GREEN=""
  YELLOW=""
  BLUE=""
  BOLD=""
  NORMAL=""
fi

# Only enable exit-on-error after the non-critical colorization stuff,
# which may fail on systems lacking tput or terminfo
set -e

echo "This will install some tools on your system:"
echo "* yaourt"
echo "* zShell + oh-my-zsh"
echo "* Virtualbox extensions (optional)"
echo "* System tools"
echo "* Desktop Environment"
echo "* Development Environment"

read -p "Are you sure you want that? [yn]" -r
echo    # move to a new line
if [[ ! $REPLY =~ ^[Yy]$ ]]
then
  exit 1
fi

ping -q -c2 archlinux.org > /dev/null
if [ $? -eq 0 ]
then
	printf "${GREEN}Internet available${NORMAL}\n"
else
  printf "${RED}No internet available, please check the connectivity and try again!${NORMAL}\n"
  exit 1
fi

printf "${RED}It is needed to get root rights for the following process!${NORMAL}\n"

echo #
read -p "Is a proxy setup needed?[yn] " -r
echo    # move to a new line
if [[ $REPLY =~ ^[Yy]$ ]]
then
  echo #
  read -p "Enter the address of the proxy:" -r
  echo    # move to a new line
  export http_proxy=$REPLY
  export https_proxy=$REPLY
fi

if [ -n "$http_proxy" ]; then
  #make a proxy available for sudo
  echo "Defaults env_keep += \"http_proxy\"" >> /etc/sudoers
  echo "Defaults env_keep += \"https_proxy\"" >> /etc/sudoers
fi

printf "${BLUE}Setup network...${NORMAL}\n"
systemctl enable dhcpcd@eth0

printf "${BLUE}Sync packages database...${NORMAL}\n"
silentpacman -Syy

printf "${BLUE}Setup basic programs and services...${NORMAL}\n"
silentpacman -S wget curl git

printf "${BLUE}Setup working user...${NORMAL}\n"
read -p "Username of new user:[archi] " -r
echo    # move to a new line
userName="archi"
if [ ! -z $REPLY ];
then
  userName=$REPLY
fi

useradd -m -G wheel $userName
passwd $userName

currentUser=$(exeAsUser $userName whoami)
printf "Current non-root user: ${YELLOW}$currentUser${NORMAL}\n"

passwd -l root

printf "${BLUE}Install yaourt...${NORMAL}\n"

cd /home/$userName/

exeAsUser $userName curl -O https://aur.archlinux.org/cgit/aur.git/snapshot/package-query.tar.gz
exeAsUser $userName tar -xvzf package-query.tar.gz
cd package-query
exeAsUser $userName makepkg -si --noconfirm
cd ..
exeAsUser $userName curl -O https://aur.archlinux.org/cgit/aur.git/snapshot/yaourt.tar.gz
exeAsUser $userName tar -xvzf yaourt.tar.gz
cd yaourt
exeAsUser $userName makepkg -si --noconfirm

cd ..
rm -rf package-query* yaourt*
cd ~

printf "${BLUE}Install oh-my-zsh with plugins...${NORMAL}\n"
cd /home/$userName/

silentpacman -S zsh
exeAsUser $userName wget -O oh-my-zsh https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh
exeAsUser $userName chmod u+x oh-my-zsh
exeAsUser $userName sed -i "/env\szsh/d" oh-my-zsh

exeAsUser $userName ./oh-my-zsh
sed -i "/^ZSH_THEME/s/\".*\"/\"gentoo\"/" /home/$userName/.zshrc
sed -i "/^plugins/s/(.*)/(git sudo adb gradle archlinux history)/" /home/$userName/.zshrc
exeAsUser $userName mkdir bin
echo "export PATH=$HOME/bin:\$PATH%" > /home/$userName/.zshenv

if [ -n "$http_proxy" ]; then
  echo "export http_proxy=$http_proxy" >> /etc/zsh/zshenv
  echo "export https_proxy=$https_proxy" >> /etc/zsh/zshenv
fi

#set zsh also for root
chsh -s $(grep /zsh$ /etc/shells | tail -1)

echo "alias sudo='sudo '" >> /etc/zsh/zshenv

cd ..
rm -rf oh-my-zsh
cd ~

printf "${BLUE}Install Reflector...${NORMAL}\n"
#Reflector for mirrorlist refreshing
cp /etc/pacman.d/mirrorlist /etc/pacman.d/mirrorlist.bak
silentyaourt -S reflector-timer-weekly

sed -i '/--country/d' /etc/reflector.conf
echo "--country Germany" >> /etc/reflector.conf

systemctl enable reflector.timer

printf "${BLUE}Install nano...${NORMAL}\n"
silentpacman -S nano
echo "export EDITOR=usr/bin/nano" >> /etc/zsh/zshenv

printf "${BLUE}Configure NTP...${NORMAL}\n"
silentpacman -S ntp

sed -i.bak '/server/d' /etc/ntp.conf
echo "server 0.de.pool.ntp.org" >> /etc/ntp.conf
echo "server 1.de.pool.ntp.org" >> /etc/ntp.conf
echo "server 2.de.pool.ntp.org" >> /etc/ntp.conf
echo "server 3.de.pool.ntp.org" >> /etc/ntp.conf

#prevent the machine from being a time server
sed -i.bak '/restrict/d' /etc/ntp.conf
echo "restrict default nomodify nopeer" >> /etc/ntp.conf
echo "restrict 127.0.0.1" >> /etc/ntp.conf

systemctl enable ntpd.service

time=$(date)
printf "Current time: ${YELLOW}$time${NORMAL}\n"

printf "${BLUE}Install basic services and drivers...${NORMAL}\n"
silentpacman -S acpid avahi cups mesa-libgl

systemctl enable acpid.service
systemctl enable avahi-daemon.service
systemctl enable org.cups.cupsd.service

printf "${BLUE}Install lightdm and gtk-greeter...${NORMAL}\n"
silentpacman -S lightdm lightdm-gtk-greeter
systemctl enable lightdm.service

desktopEnv=""
until [ -n "$desktopEnv" ]; do
echo "Which desktop environment you want to have installed ?"
echo "1] Cinnamon"
echo "2] Xfce 4"
read -n 1 desktopSelection
echo #new line
case $desktopSelection in
    1 )
      printf "${BLUE}Install Cinnamon...${NORMAL}\n"
      silentpacman -S cinnamon
      desktopEnv="cinnamon"
      ;;
    2 )
      printf "${BLUE}Install Xfce...${NORMAL}\n"
      silentpacman -S xfce4
      desktopEnv="xfce"
      ;;
esac
done

printf "${BLUE}Install Material Look...${NORMAL}\n"
silentyaourt -S paper-icon-theme-git adapta-gtk-theme ttf-roboto

case "$desktopEnv" in
  "cinnamon" )
    gsettings set org.cinnamon.desktop.interface icon-theme 'Paper'
    gsettings set org.cinnamon.desktop.interface cursor-theme "Adapta-Nokto"
    gsettings set org.cinnamon.desktop.interface gtk-theme "Adapta-Nokto"
    gsettings set org.cinnamon.desktop.wm.preferences theme "Adapta-Nokto"
    gsettings set org.cinnamon.theme name "Adapta-Nokto"
  "xfce" )
    xfconf-query -c xsettings -p /Net/ThemeName -s "Adapta-Nokto"
    xfconf-query -c xsettings -p /Net/IconThemeName -s "Paper"
esac

echo #
read -p "Is the system running in a virtualbox environment? [yn]" -r
echo    # move to a new line
if [[ $REPLY =~ ^[Yy]$ ]]
then
  silentpacman -S virtualbox-guest-modules-arch virtualbox-guest-utils
  systemctl enable vboxservice.service
else
  printf "${YELLOW}Skipping virtualbox additions${NORMAL}\n"
fi

printf "${BLUE}Install gedit...${NORMAL}\n"
silentpacman -S gedit

printf "${BLUE}Install google-chrome...${NORMAL}\n"
silentyaourt -S google-chrome

printf "${BLUE}Install atom...${NORMAL}\n"
silentpacman -S atom

printf "${BLUE}Install JDK 8...${NORMAL}\n"
silentpacman -S jdk8-openjdk

printf "${BLUE}Install IDEA Community Edition...${NORMAL}\n"
silentpacman -S intellij-idea-community-edition

printf "${BLUE}Install Android-SDK...${NORMAL}\n"
silentyaourt -S android-sdk
groupadd androidsdk
gpasswd -a $currentUser androidsdk
chown -R :sdkusers /opt/android-sdk/
chmod -R g+w /opt/android-sdk/
export ANDROID_HOME=/opt/android-sdk
echo "export ANDROID_HOME=/opt/android-sdk" >> ~/.zshenv
$ANDROID_HOME/tools/android update sdk --no-ui

printf "${BLUE}Install ADB...${NORMAL}\n"
silentpacman -S android-tools
gpasswd -a $currentUser adbusers

printf "${BLUE}Install Android Studio...${NORMAL}\n"
silentyaourt -S android-studio

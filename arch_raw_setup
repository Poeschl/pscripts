#!/bin/bash

echo "This will install linux arch with following settings:"
echo "* Install it in UEFI mode"
echo "* partitions with LVM"
echo "  1. partition: UEFI (512 MB)"
echo "  2. partition: SWAP (1.25 times your RAM)"
echo "  3. partition: ROOT (user-defined)"
echo "  4. partition: HOME (user-defined)"
echo "* German keyboard and locale"

read -p "Are you sure you want that?[yn] " -r
echo    # move to a new line
if [[ ! $REPLY =~ ^[Yy]$ ]]
then
  exit 1
fi

if [ ! -d "/sys/firmware/efi" ]; then
  echo "Not booted in UEFI mode! Please reboot with UEFI enabled."
  exit 1
else
  echo "UEFI mode enabled"
fi

ping -q -c2 archlinux.org > /dev/null
if [ $? -eq 0 ]
then
	echo "Internet available"
else
  echo "No internet available, please check the connectivity and try again!"
  exit 1
fi

read -p "Is a proxy setup needed?[yn] " -r
echo    # move to a new line
if [[ $REPLY =~ ^[Yy]$ ]]
then
  read -p "Enter the address of the proxy:" -r
  echo    # move to a new line
  export http_proxy=$REPLY
  export https_proxy=$REPLY
fi

read -p "Please specify the device to format and install arch on:[/dev/sda] " -r
echo    # move to a new line
installDev="/dev/sda"
if [ ! -z $REPLY ];
then
  installDev=$REPLY
fi

echo "Set german keyboard..."
loadkeys de-latin1

echo "Partition harddisk..."
ramSize=`sed -n -e '/^MemTotal/s/^[^0-9]*//p' /proc/meminfo | grep -o --regexp "[0-9]*"`
swapSize=`expr $ramSize / 4`
swapSize=`expr $ramSize + $swapSize`
swapSize=`expr $swapSize / 1024`
swapSize+="M"
echo "Estimated SWAP size: $swapSize"

sed -e 's/\s*\([\+0-9a-zA-Z]*\).*/\1/' << EOF | gdisk $installDev
  n # new
  1 # first partition
    # default start sector
  +512M # 512 MB UEFI partition
  EF00 # UEFI type
  n # new
  2 # first partition
    # default start sector
  +$swapSize # SWAP size
  8200 # SWAP type
  n # new
  3 # first partition
    # default start sector
    # default end sector (all free space)
  8300 # linux filesystem
  p # print the in-memory partition table
  w # write the partition table
  y # accept changes
EOF

read -p "How big should the root partition be:[20G] " -r
echo    # move to a new line
rootPartSize="20G"
if [ ! -z $REPLY ];
then
  rootPartSize=$REPLY
fi

pvcreate ${installDev}3
vgcreate lvm ${installDev}3
lvcreate --name root -L${rootPartSize} lvm # root partition
lvcreate --name home -l100%FREE lvm  # home partition
lvscan

echo "Format partitions..."

mkfs.fat -F 32 ${installDev}1
mkswap -L swap ${installDev}2
mkfs.ext4 -L root /dev/lvm/root
mkfs.ext4 -L home /dev/lvm/home

echo "Mount partitions..."

mount /dev/lvm/root /mnt # root
mkdir /mnt/home
mount /dev/lvm/home /mnt/home # home
mkdir -p /mnt/boot
mount ${installDev} /mnt/boot # EFI

swapon -L swap

echo "Install Arch linux to disk..."
cp /etc/pacman.d/mirrorlist /etc/pacman.d/mirrorlist.bak
grep -E -A 1 ".*Germany.*$" /etc/pacman.d/mirrorlist.bak | sed '/--/d' > /etc/pacman.d/mirrorlist

pacstrap /mnt base base-devel

echo "Generate fstab..."
genfstab -Lp /mnt > /mnt/etc/fstab
cat /mnt/etc/fstab

echo "Config system..."

read -p "Hostname: [arch]" -r
echo    # move to a new line
hostname="arch"
if [ ! -z $REPLY ];
then
  hostname=$REPLY
fi

arch-chroot /mnt/ echo $hostname > /etc/hostname

arch-chroot /mnt/ echo LANG=de_DE.UTF-8 > /etc/locale.conf
arch-chroot /mnt/ echo LC_COLLATE=C >> /etc/locale.conf
arch-chroot /mnt/ echo LANGUAGE=de_DE >> /etc/locale.conf

arch-chroot /mnt/ ln -s /usr/share/zoneinfo/Europe/Berlin /etc/localtime

arch-chroot /mnt/ cp /etc/locale.gen /etc/locale.gen.bak
arch-chroot /mnt/ sed -i 's/#de_DE.UTF-8/de_DE.UTF-8/g' /etc/locale.gen
arch-chroot /mnt/ sed -i 's/#de_DE ISO-8859-1/de_DE ISO-8859-1/g' /etc/locale.gen
arch-chroot /mnt/ sed -i 's/#en_US.UTF-8/en_US.UTF-8/g' /etc/locale.gen
arch-chroot /mnt/ locale-gen

cp /etc/pacman.d/mirrorlist /mnt/etc/pacman.d/mirrorlist

arch-chroot /mnt/ pacman -Sy

arch-chroot /mnt/ mkinitcpio -p linux

echo "Set root password..."

read -s -p "Root password:[arch] " -r
echo    # move to a new line
rootPass="arch"
if [ ! -z $REPLY ];
then
  rootPass=$REPLY
fi

arch-chroot /mnt/ sed -e 's/\s*\([\+0-9a-zA-Z]*\).*/\1/' << EOF | passwd
  $rootPass # password
  $rootPass # second time
EOF

echo "Install GRUB..."
arch-chroot /mnt/ mount -t efivarfs efivarfs /sys/firmware/efi/efivars
arch-chroot /mnt/ pacman -Sq grub efibootmgr dosfstools

arch-chroot /mnt/ grub-mkconfig -o /boot/grub/grub.cfg

arch-chroot /mnt/ grub-install --target=x86_64-efi --efi-directory=/boot --bootloader-id=arch_grub --recheck --debug

if [ ! $? -eq 0 ]
then
  echo "Error on create boot menu entry, trying again with efibootmgr..."
  arch-chroot /mnt/ efibootmgr -q -c -d ${installDev} -p 1 -w -L "GRUB: Arch-Linux" -l "\EFI\arch_grub\grubx64.efi"
fi

arch-chroot /mnt/ mkdir -p /boot/grub/locale
arch-chroot /mnt/ cp /usr/share/locale/en\@quot/LC_MESSAGES/grub.mo /boot/grub/locale/en.mo

echo "Exit installed system. Please reboot now to switch to your fresh arch linux."
